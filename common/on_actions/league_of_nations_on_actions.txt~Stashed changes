on_actions = {
	# Not run on a specific country.
	on_startup = {
		effect = {
			# create LoN
			random_country = {
				limit = {
					is_ai = yes
					date > 1920.1.9
					date < 1946.4.21
					country_exists = LON
				}
				set_global_flag = league_of_nations_mod_active
				country_event = { id = league_of_nations_events.1 }
			}
			# set threat at start
			every_country = {
				if = {
					limit = {
						has_start_date > 1939.8.13
						tag = CHI # China annexes 3 countries at 1939 start, but 45 threat is definetly too much
					}
					set_variable = { league_of_nations_generated_threat = 15 }
				}
				else_if = {
					limit = {
						always = yes
					}
					add_to_variable = { league_of_nations_generated_threat = has_added_tension_amount }
				}
				sort_array_high_to_low_global_threat_countries_array = yes
			}
		}
	}

	# ROOT is country
	on_daily = {
		effect = {

			# adding/removing flags for being at war with someone (needed for state control change check, since ownership is granted after peace treaty and thus "has_war_with" is not good enough)
			if = {
				limit = {
					any_other_country = {
						has_war_with = ROOT
						NOT = { has_country_flag = has_war_with_@ROOT }
					}
				}
				every_other_country = {
					limit = {
						has_war_with = ROOT
						NOT = { has_country_flag = has_war_with_@ROOT }
					}
					set_country_flag = has_war_with_@ROOT
				}
			}
			if = {
				limit = {
					any_other_country = {
						NOT = { has_war_with = ROOT }
						has_country_flag = has_war_with_@ROOT
					}
				}
				every_other_country = {
					limit = {
						NOT = { has_war_with = ROOT }
						has_country_flag = has_war_with_@ROOT
					}
					clr_country_flag = has_war_with_@ROOT
				}
			}

			# Remove trade sanctions / reduce running time of trade sanctions
			if = {
				limit = {
					check_variable = { num_of_active_league_of_nations_trade_sanctions > 0 }
				}
				if = {
					limit = {
						check_variable = { duration_of_1_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_1_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_1_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_1
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = { duration_of_2_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_2_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_2_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_2
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = { duration_of_3_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_3_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_3_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_3
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = { duration_of_4_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_4_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_4_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_4
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = { duration_of_5_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_5_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_5_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_5
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = { duration_of_6_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_6_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_6_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_6
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = { duration_of_7_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_7_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_7_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_7
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = { duration_of_8_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_8_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_8_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_8
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = { duration_of_9_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_9_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_9_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_9
							}
						}
					}
				}
				if = {
					limit = {
						check_variable = { duration_of_10_league_of_nations_trade_sanction > 0 }
					}
					subtract_from_variable = { duration_of_10_league_of_nations_trade_sanction = 1 }
					if = {
						limit = {
							check_variable = { duration_of_10_league_of_nations_trade_sanction < 1 }
						}
						subtract_from_variable = { num_of_active_league_of_nations_trade_sanctions = 1 }
						every_country = {
							remove_opinion_modifier = {
								target = ROOT
								modifier = league_of_nations_trade_sanction_modifier_10
							}
						}
					}
				}
			}

			# Stuff for the LoN leader
			if = {
				limit = {
					has_country_flag = leader_of_league_of_nations
				}
				# Reduce time til voting ends
				if = {
					limit = {
						check_variable = { global.league_of_nations_voting_time > 0 }
					}
					subtract_from_variable = { global.league_of_nations_voting_time = 1 }
				}
				# Reduce time til next possible voting
				if = {
					limit = {
						check_variable = { global.time_til_next_possible_league_of_nations_voting > 0 }
					}
					subtract_from_variable = { global.time_til_next_possible_league_of_nations_voting = 1 }
				}
				# LoN focus stuff
				if = {
					limit = {
						has_global_flag = league_of_nations_focus_active
					}
					if = {
						limit = {
							check_variable = { global.time_til_league_of_nations_focus_is_completed > 0 }
						}
						subtract_from_variable = { global.time_til_league_of_nations_focus_is_completed = 1 }
						add_to_variable = { global.league_of_nations_focus_progress = 1 }
						if = {
							limit = {
								OR = {
									AND = {
										has_global_flag = league_of_nations_focus_7_selected
										NOT = { has_global_flag = league_of_nations_focus_7_completed }
									}
									AND = {
										has_global_flag = league_of_nations_focus_8_selected
										NOT = { has_global_flag = league_of_nations_focus_8_completed }
									}
								}
								check_variable = { global.time_til_league_of_nations_focus_is_completed > 0 }
								has_war = yes
							}
							if = {
								limit = {
									has_global_flag = league_of_nations_focus_7_selected
									NOT = { has_global_flag = league_of_nations_focus_7_completed }
								}
								clr_global_flag = league_of_nations_focus_7_selected
								country_event = { id = league_of_nations_focuses_events.11 }
							}
							else_if = {
								limit = {
									has_global_flag = league_of_nations_focus_8_selected
									NOT = { has_global_flag = league_of_nations_focus_8_completed }
								}
								clr_global_flag = league_of_nations_focus_8_selected
								country_event = { id = league_of_nations_focuses_events.11 }
							}
							clr_global_flag = league_of_nations_focus_active
							set_variable = { global.time_til_league_of_nations_focus_is_completed = 210 }
							set_variable = { global.league_of_nations_focus_progress = 0 }
						}
					}
					if = {
						limit = {
							has_global_flag = league_of_nations_focus_active
							check_variable = { global.time_til_league_of_nations_focus_is_completed < 1 }
						}
						if = {
							limit = {
								has_global_flag = league_of_nations_focus_1_selected
								NOT = { has_global_flag = league_of_nations_focus_1_completed }
							}
							set_global_flag = league_of_nations_focus_1_completed
							country_event = { id = league_of_nations_focuses_events.1 }
						}
						else_if = {
							limit = {
								has_global_flag = league_of_nations_focus_2_selected
								NOT = { has_global_flag = league_of_nations_focus_2_completed }
							}
							set_global_flag = league_of_nations_focus_2_completed
							country_event = { id = league_of_nations_focuses_events.2 }
						}
						else_if = {
							limit = {
								has_global_flag = league_of_nations_focus_3_selected
								NOT = { has_global_flag = league_of_nations_focus_3_completed }
							}
							set_global_flag = league_of_nations_focus_3_completed
							country_event = { id = league_of_nations_focuses_events.3 }
						}
						else_if = {
							limit = {
								has_global_flag = league_of_nations_focus_4_selected
								NOT = { has_global_flag = league_of_nations_focus_4_completed }
							}
							set_global_flag = league_of_nations_focus_4_completed
							country_event = { id = league_of_nations_focuses_events.4 }
						}
						else_if = {
							limit = {
								has_global_flag = league_of_nations_focus_5_selected
								NOT = { has_global_flag = league_of_nations_focus_5_completed }
							}
							set_global_flag = league_of_nations_focus_5_completed
							country_event = { id = league_of_nations_focuses_events.5 }
						}
						else_if = {
							limit = {
								has_global_flag = league_of_nations_focus_6_selected
								NOT = { has_global_flag = league_of_nations_focus_6_completed }
							}
							set_global_flag = league_of_nations_focus_6_completed
							country_event = { id = league_of_nations_focuses_events.6 }
						}
						else_if = {
							limit = {
								has_global_flag = league_of_nations_focus_7_selected
								NOT = { has_global_flag = league_of_nations_focus_7_completed }
							}
							set_global_flag = league_of_nations_focus_7_completed
							country_event = { id = league_of_nations_focuses_events.7 }
						}
						else_if = {
							limit = {
								has_global_flag = league_of_nations_focus_8_selected
								NOT = { has_global_flag = league_of_nations_focus_8_completed }
							}
							set_global_flag = league_of_nations_focus_8_completed
							country_event = { id = league_of_nations_focuses_events.8 }
						}
						clr_global_flag = league_of_nations_focus_active
					}
				}
				# LoN voting ended
				if = {
					limit = {
						has_global_flag = league_of_nations_voting
						OR = {
							check_variable = { global.league_of_nations_voting_time < 1 }
							event_target:target_of_league_of_nations_voting = {
								exists = no
							}
						}
					}
					country_event = { id = league_of_nations_events.4 }
				}
				# Reduce time til next election
				if = {
					limit = {
						check_variable = { global.days_til_next_league_of_nations_election > 0 }
					}
					subtract_from_variable = { global.days_til_next_league_of_nations_election = 1 }
				}
				# start election
				if = {
					limit = {
						check_variable = { global.days_til_next_league_of_nations_election < 1 }
						NOT = { has_global_flag = league_of_nations_election }
						NOT = { has_global_flag = league_of_nations_voting }
						NOT = { has_global_flag = league_of_nations_focus_6_completed }
					}
					country_event = { id = league_of_nations_events.5 }
				}
				# No confidence vote
				if = {
					limit = {
						set_temp_variable = { num_of_total_members_of_league_of_nation = global.members_of_league_of_nation_array^num }
						divide_temp_variable = { num_of_total_members_of_league_of_nation = 2 }
						check_variable = { global.num_of_league_of_nations_noconfidence_votes > num_of_total_members_of_league_of_nation }
					}
					set_variable = { global.days_til_next_league_of_nations_election = 1 }
					news_event = { id = league_of_nations_news_events.14 hours = 1 }
				}

				# start historical voting: Anschluss
				if = {
					limit = {
						has_global_flag = GER_anschluss_voting_in_queue
						NOT = { has_global_flag = league_of_nations_voting }
						NOT = { has_global_flag = GER_anschluss_voting_started }
						NOT = { has_global_flag = GER_anschluss_voting_happened }
					}
					if = {
						limit = {
							country_exists = GER
							country_exists = MEX
							MEX = { has_country_flag = member_of_league_of_nations }
						}
						MEX = {
							country_event = { id = league_of_nations_events.17 days = 5 }
						}
						set_global_flag = GER_anschluss_voting_started
					}
					else_if = {
						limit = {
							always = yes
						}
						clr_global_flag = GER_anschluss_voting_in_queue
					}
				}
				else_if = {
					limit = {
						has_global_flag = GER_anschluss_voting_in_queue
						OR = {
							has_global_flag = GER_anschluss_voting_started
							has_global_flag = GER_anschluss_voting_happened
							NOT = { country_exists = GER }
							NOT = { country_exists = MEX }
						}
					}
					clr_global_flag = GER_anschluss_voting_in_queue
				}

				# start historical voting: Winter War
				if = {
					limit = {
						has_global_flag = SOV_FIN_voting_triggered
						NOT = { has_global_flag = league_of_nations_voting }
						NOT = { has_global_flag = SOV_FIN_voting_started }
						NOT = { has_global_flag = GER_anschluss_voting_started }
						NOT = { has_global_flag = GER_anschluss_voting_in_queue }
					}
					if = {
						limit = {
							country_exists = SOV
							country_exists = FIN
							FIN = { has_country_flag = member_of_league_of_nations }
							NOT = { has_global_flag = SOV_FIN_voting_happened }
						}
						FIN = {
							country_event = { id = league_of_nations_events.19 days = 5 }
						}
						set_global_flag = SOV_FIN_voting_started
					}
					else_if = {
						limit = {
							always = yes
						}
						clr_global_flag = SOV_FIN_voting_triggered
					}
				}
				else_if = {
					limit = {
						has_global_flag = SOV_FIN_voting_triggered
						OR = {
							has_global_flag = SOV_FIN_voting_started
							has_global_flag = SOV_FIN_voting_happened
							NOT = { country_exists = SOV }
							NOT = { country_exists = FIN }
						}
					}
					clr_global_flag = SOV_FIN_voting_triggered
				}
			}

			# Reduce cooldown time for being a valid target of a LoN voting
			if = {
				limit = {
					check_variable = { cooldown_for_league_of_nations_voting > 0 }
				}
				subtract_from_variable = { cooldown_for_league_of_nations_voting = 1 }
			}
			# Reduce cooldown time for being able to join the LoN
			if = {
				limit = {
					check_variable = { cooldown_join_league_of_nations > 0 }
				}
				subtract_from_variable = { cooldown_join_league_of_nations = 1 }
			}

			# give cosmetic tags, if LoN mapmode is active
			if = {
				limit = {
					has_global_flag = league_of_nations_map_mode_active
				}
				if = {
					limit = {
						has_country_flag = leader_of_league_of_nations
						NOT = { has_cosmetic_tag = LEAGUE_OF_NATIONS_LEADER_CT }
					}
					save_cosmetic_tag_before_league_of_nations_map_mode = yes
					set_cosmetic_tag = LEAGUE_OF_NATIONS_LEADER_CT
				}
				else_if = {
					limit = {
						has_country_flag = member_of_league_of_nations
						NOT = { has_cosmetic_tag = LEAGUE_OF_NATIONS_MEMBER_CT }
					}
					save_cosmetic_tag_before_league_of_nations_map_mode = yes
					set_cosmetic_tag = LEAGUE_OF_NATIONS_MEMBER_CT
				}
				else_if = {
					limit = {
						NOT = { has_cosmetic_tag = NOT_LEAGUE_OF_NATIONS_MEMBER_CT }
					}
					save_cosmetic_tag_before_league_of_nations_map_mode = yes
					set_cosmetic_tag = NOT_LEAGUE_OF_NATIONS_MEMBER_CT
				}
				if = {
					limit = {
						has_country_flag = started_league_of_nations_voting
						NOT = { has_cosmetic_tag = LEAGUE_OF_NATIONS_STARTER_OF_VOTING_CT }
					}
					save_cosmetic_tag_before_league_of_nations_map_mode = yes
					set_cosmetic_tag = LEAGUE_OF_NATIONS_STARTER_OF_VOTING_CT
				}
				else_if = {
					limit = {
						has_country_flag = target_of_league_of_nations_voting
						OR = {
							AND = {
								has_country_flag = member_of_league_of_nations
								NOT = { has_cosmetic_tag = LEAGUE_OF_NATIONS_TARGET_OF_VOTING_CT_MEMBER_CT }
							}
							AND = {
								NOT = { has_country_flag = member_of_league_of_nations }
								NOT = { has_cosmetic_tag = LEAGUE_OF_NATIONS_TARGET_OF_VOTING_CT }
							}
						}
					}
					save_cosmetic_tag_before_league_of_nations_map_mode = yes
					if = {
						limit = {
							has_country_flag = member_of_league_of_nations
						}
						set_cosmetic_tag = LEAGUE_OF_NATIONS_TARGET_OF_VOTING_CT_MEMBER_CT
					}
					else_if = {
						limit = {
							always = yes
						}
						set_cosmetic_tag = LEAGUE_OF_NATIONS_TARGET_OF_VOTING_CT
					}
				}
			}

			# Set opinion between members
			if = {
				limit = {
					has_country_flag = member_of_league_of_nations
					any_other_country = {
						has_country_flag = member_of_league_of_nations
						NOT = { has_country_flag = league_of_nations_opinion_set_for_@ROOT }
					}
				}
				every_other_country = {
					limit = {
						has_country_flag = member_of_league_of_nations
						NOT = { has_country_flag = league_of_nations_opinion_set_for_@ROOT }
					}
					add_opinion_modifier = {
						target = ROOT
						modifier = league_of_nations_member_opinion
					}
					set_country_flag = league_of_nations_opinion_set_for_@ROOT
				}
			}
			if = {
				limit = {
					NOT = { has_country_flag = member_of_league_of_nations }
					any_other_country = {
						has_country_flag = league_of_nations_opinion_set_for_@ROOT
					}
				}
				every_other_country = {
					limit = {
						has_country_flag = league_of_nations_opinion_set_for_@ROOT
					}
					remove_opinion_modifier = {
						target = ROOT
						modifier = league_of_nations_member_opinion
					}
					clr_country_flag = league_of_nations_opinion_set_for_@ROOT
				}
			}

			# Members guarantee the LON country
			if = {
				limit = {
					has_country_flag = member_of_league_of_nations
					NOT = { has_country_flag = league_of_nations_guarantee_set }
					NOT = { tag = LON }
				}
				diplomatic_relation = {
					country = LON
					relation = guarantee
					active = yes
				}
				set_country_flag = league_of_nations_guarantee_set
			}

			# Set weekly threat change value
			set_variable = { league_of_nations_threat_from_war_peace = 0 }
			if = {
				limit = {
					has_war = no
					NOT = { check_variable = { league_of_nations_threat_from_war_peace = -0.4 } }
				}
				set_variable = { league_of_nations_threat_from_war_peace = -0.4 }
			}
			if = {
				limit = {
					has_defensive_war = yes
					has_civil_war = no
					NOT = { check_variable = { league_of_nations_threat_from_war_peace = -0.12 } }
				}
				set_variable = { league_of_nations_threat_from_war_peace = -0.12 }
			}
			set_variable = { league_of_nations_threat_from_offensive_war = 0 }
			if = {
				limit = {
					has_offensive_war = yes
					has_civil_war = no
					any_country = {
						has_country_flag = member_of_league_of_nations
						has_defensive_war_with = ROOT
					}
					NOT = { check_variable = { league_of_nations_threat_from_offensive_war = 0.2 } }
				}
				set_variable = { league_of_nations_threat_from_offensive_war = 0.2 }
			}
			if = {
				limit = {
					NOT = { check_variable = { league_of_nations_threat_from_offensive_war = 0.2 } }
				}
				if = {
					limit = {
						has_war = no
						any_country = {
							has_offensive_war = yes
							meta_trigger = {
								text = {
									has_volunteers_amount_from = {
										tag = [COUNTRY]
										count > 0
									}
								}
								COUNTRY = "[Root.GetTag]"
							}
						}
					}
					set_variable = { league_of_nations_threat_from_offensive_war = 0.5 }
				}
				else_if = {
					limit = {
						has_war = no
						any_country = {
							has_defensive_war = yes
							meta_trigger = {
								text = {
									has_volunteers_amount_from = {
										tag = [COUNTRY]
										count > 0
									}
								}
								COUNTRY = "[Root.GetTag]"
							}
						}
					}
					set_variable = { league_of_nations_threat_from_offensive_war = 0.3 }
				}
			}

			set_variable = { league_of_nations_generated_threat_rate = 0 }
			add_to_variable = { league_of_nations_generated_threat_rate = league_of_nations_threat_from_war_peace }
			add_to_variable = { league_of_nations_generated_threat_rate = league_of_nations_threat_from_offensive_war }

			add_to_variable = { league_of_nations_threat_change_days = 1 }
			if = {
				limit = {
					check_variable = { league_of_nations_threat_change_days > 6 }
				}
				set_variable = { league_of_nations_threat_change_days = 0 }
				add_to_variable = { league_of_nations_generated_threat = league_of_nations_generated_threat_rate }
				sort_array_high_to_low_global_threat_countries_array = yes
			}

			if = {
				limit = {
					check_variable = { league_of_nations_generated_threat > 100 }
				}
				set_variable = { league_of_nations_generated_threat = 100 }
			}
			if = {
				limit = {
					check_variable = { league_of_nations_generated_threat < 0 }
				}
				set_variable = { league_of_nations_generated_threat = 0 }
			}

			# add threat change for Italian Ethopian war (only once)
			if = {
				limit = {
					has_country_flag = ITA_ETH_war_add_aggressiveness
				}
				clr_country_flag = ITA_ETH_war_add_aggressiveness
				add_to_variable = { league_of_nations_generated_threat = 10 }
				clr_country_flag = last_league_of_nations_threat_static_change
				set_country_flag = last_league_of_nations_threat_static_change
				set_variable = { last_league_of_nations_threat_static_change = 1 }
				sort_array_high_to_low_global_threat_countries_array = yes
			}

			# Reduce cooldown time for AI to select a country against which votings failed too often in a row
			if = {
				limit = {
					check_variable = { num_of_failed_league_of_nations_votings_against_us_cooldown > 0 }
				}
				subtract_from_variable = { num_of_failed_league_of_nations_votings_against_us_cooldown = 1 }
				if = {
					limit = {
						check_variable = { league_of_nations_generated_threat > 50 }
					}
					subtract_from_variable = { num_of_failed_league_of_nations_votings_against_us_cooldown = 1 }
				}
				if = {
					limit = {
						check_variable = { num_of_failed_league_of_nations_votings_against_us_cooldown < 0 }
					}
					subtract_from_variable = { num_of_failed_league_of_nations_votings_against_us_cooldown = 0.5 }
				}
				if = {
					limit = {
						check_variable = { num_of_failed_league_of_nations_votings_against_us > 0 }
						NOT = { check_variable = { num_of_failed_league_of_nations_votings_against_us_cooldown > 0 } }
					}
					set_variable = { num_of_failed_league_of_nations_votings_against_us_cooldown = 0 }
					subtract_from_variable = { num_of_failed_league_of_nations_votings_against_us = 1 }
					if = {
						limit = {
							check_variable = { num_of_failed_league_of_nations_votings_against_us > 0 }
						}
						set_variable = { num_of_failed_league_of_nations_votings_against_us_cooldown = 365 }
					}
				}
			}

			# set flag that reduces threat when annexing a subject
			if = {
				limit = {
					is_subject = yes
					overlord = {
						ROOT = {
							NOT = { has_country_flag = was_subject_of_@PREV }
						}
					}
				}
				every_country = {
					limit = {
						ROOT = {
							has_country_flag = was_subject_of_@PREV
						}
					}
					ROOT = {
						clr_country_flag = was_subject_of_@PREV
					}
				}
				overlord = {
					ROOT = {
						set_country_flag = was_subject_of_@PREV
					}
				}
			}

			# add/remove LoN ideas
			if = {
				limit = {
					has_country_flag = member_of_league_of_nations
					NOT = { has_idea = league_of_nations_member_idea }
				}
				add_ideas = league_of_nations_member_idea
			}
			if = {
				limit = {
					NOT = { has_country_flag = member_of_league_of_nations }
					has_idea = league_of_nations_member_idea
				}
				remove_ideas = league_of_nations_member_idea
			}
			if = {
				limit = {
					has_country_flag = leader_of_league_of_nations
					NOT = { has_idea = league_of_nations_leader_idea }
				}
				add_ideas = league_of_nations_leader_idea
			}
			if = {
				limit = {
					NOT = { has_country_flag = leader_of_league_of_nations }
					has_idea = league_of_nations_leader_idea
				}
				remove_ideas = league_of_nations_leader_idea
			}
		}
	}

	# ROOT is winner, FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			FROM = {
				# effects for if LoN leader is annexed
				if = {
					limit = {
						has_country_flag = leader_of_league_of_nations
					}
					clr_country_flag = leader_of_league_of_nations
					clear_global_event_target = league_of_nations_leader
					set_country_flag = was_leader_of_league_of_nations
					if = {
						limit = {
							any_other_country = {
								has_country_flag = member_of_league_of_nations
								has_capitulated = no
							}
						}
						random_other_country = {
							limit = {
								has_country_flag = member_of_league_of_nations
								has_capitulated = no
							}
							country_event = { id = league_of_nations_events.10 }
						}
						set_variable = { global.days_til_next_league_of_nations_election = 1 }
					}
					else_if = {
						limit = {
							NOT = {
								any_other_country = {
									has_country_flag = member_of_league_of_nations
									has_capitulated = no
								}
							}
						}
						set_global_flag = league_of_nations_dissolved
						every_country = {
							limit = {
								has_country_flag = member_of_league_of_nations
							}
							leave_league_of_nations_effect = yes
						}
						ROOT = {
							news_event = { id = league_of_nations_news_events.17 }
						}
					}
				}

				# leave LoN when annexed
				if = {
					limit = {
						has_country_flag = member_of_league_of_nations
					}
					leave_league_of_nations_effect = yes
				}
				clr_country_flag = was_leader_of_league_of_nations

				# Anschluss voting:
				if = {
					limit = {
						original_tag = AUS
						is_historical_focus_on = yes
						ROOT = {
							original_tag = GER
							has_completed_focus = GER_anschluss
						}
						country_exists = MEX
						MEX = { has_country_flag = member_of_league_of_nations }
						NOT = { has_global_flag = GER_anschluss_voting_in_queue }
						NOT = { has_global_flag = GER_anschluss_voting_started }
					}
					MEX = {
						country_event = { id = league_of_nations_events.17 }
					}
				}
			}

			ROOT = {
				if = {
					limit = {
						has_country_flag = army_desertion
					}
					clr_country_flag = army_desertion
				}
			}

			if = {
				limit = {
					NOT = { has_country_flag = army_desertion }
				}
				# add threat for annexation
				if = {
					limit = {
						NOT = { has_country_flag = civil_war_small_aggressiveness_penalty_for_annexing }
					}
					# base threat +15
					set_temp_variable = { league_of_nations_threat_from_annexation_temp = 15 }
					if = {
						limit = {
							FROM = { has_country_flag = was_subject_of_@ROOT }
						}
						FROM = { clr_country_flag = was_subject_of_@ROOT }
						# only 10 threat for annexing subjects
						subtract_from_temp_variable = { league_of_nations_threat_from_annexation_temp = 5 }
						if = {
							limit = {
								FROM = {
									OR = {
										has_country_flag = CHI_integrate_the_administration
										tag = GXC
										tag = YUN
										tag = SHX
										tag = XSM
										tag = SIK
									}
								}
								NOT = { has_country_flag = we_already_warlord_annexed_@FROM }
							}
							set_country_flag = we_already_warlord_annexed_@FROM
							# only 5 threat when annexing warlord subjects
							subtract_from_temp_variable = { league_of_nations_threat_from_annexation_temp = 5 }
						}
					}
					set_variable = { league_of_nations_threat_from_annexation = league_of_nations_threat_from_annexation_temp }
					add_to_variable = { league_of_nations_generated_threat = league_of_nations_threat_from_annexation_temp }
					if = {
						limit = {
							check_variable = { league_of_nations_generated_threat > 100 }
						}
						set_variable = { league_of_nations_generated_threat = 100 }
					}
					if = {
						limit = {
							check_variable = { league_of_nations_generated_threat < 0 }
						}
						set_variable = { league_of_nations_generated_threat = 0 }
					}
					clr_country_flag = last_league_of_nations_threat_static_change
					set_country_flag = last_league_of_nations_threat_static_change
					set_variable = { last_league_of_nations_threat_static_change = 2 }
					sort_array_high_to_low_global_threat_countries_array = yes
					set_variable = { last_annexed_country = FROM.id }
				}
				else_if = {
					limit = {
						has_country_flag = civil_war_small_aggressiveness_penalty_for_annexing
					}
					clr_country_flag = civil_war_small_aggressiveness_penalty_for_annexing
					set_temp_variable = { league_of_nations_threat_from_annexation_temp = 5 }
					add_to_variable = { league_of_nations_generated_threat = league_of_nations_threat_from_annexation_temp }
					if = {
						limit = {
							check_variable = { league_of_nations_generated_threat > 100 }
						}
						set_variable = { league_of_nations_generated_threat = 100 }
					}
					if = {
						limit = {
							check_variable = { league_of_nations_generated_threat < 0 }
						}
						set_variable = { league_of_nations_generated_threat = 0 }
					}
					clr_country_flag = last_league_of_nations_threat_static_change
					set_country_flag = last_league_of_nations_threat_static_change
					set_variable = { last_league_of_nations_threat_static_change = 7 }
					sort_array_high_to_low_global_threat_countries_array = yes
				}
			}
		}
	}
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			# effects when LoN leader capitulates
			if = {
				limit = {
					has_country_flag = leader_of_league_of_nations
				}
				# make an election happen in 1 day, if any country could be elected
				if = {
					limit = {
						any_other_country = {
							has_country_flag = member_of_league_of_nations
							has_capitulated = no
						}
					}
					set_variable = { global.days_til_next_league_of_nations_election = 1 }
				}
				# else dissolve LoN
				else_if = {
					limit = {
						NOT = {
							any_other_country = {
								has_country_flag = member_of_league_of_nations
								has_capitulated = no
							}
						}
					}
					set_global_flag = league_of_nations_dissolved
					every_country = {
						limit = {
							has_country_flag = member_of_league_of_nations
						}
						leave_league_of_nations_effect = yes
					}
					FROM = {
						news_event = { id = league_of_nations_news_events.17 }
					}
				}
			}
			# Dissolve if the LON country capitulates
			if = {
				limit = {
					LON = {
						has_capitulated = yes
					}
				}
				set_global_flag = league_of_nations_dissolved
				every_country = {
					limit = {
						has_country_flag = member_of_league_of_nations
					}
					leave_league_of_nations_effect = yes
				}
				FROM = {
					news_event = { id = league_of_nations_news_events.17 }
				}
			}
			# reduce threat because of capitulating
			set_temp_variable = { league_of_nations_threat_from_capitulation_temp = -50 }
			add_to_variable = { league_of_nations_generated_threat = league_of_nations_threat_from_capitulation_temp }
			if = {
				limit = {
					check_variable = { league_of_nations_generated_threat > 100 }
				}
				set_variable = { league_of_nations_generated_threat = 100 }
			}
			if = {
				limit = {
					check_variable = { league_of_nations_generated_threat < 0 }
				}
				set_variable = { league_of_nations_generated_threat = 0 }
			}
			clr_country_flag = last_league_of_nations_threat_static_change
			set_country_flag = last_league_of_nations_threat_static_change
			set_variable = { last_league_of_nations_threat_static_change = 4 }
			sort_array_high_to_low_global_threat_countries_array = yes
		}
	}

	# ROOT is previously capitulated country
	on_uncapitulation = {
		effect = {
			# set threat to 0, if lost the war
			if = {
				limit = {
					has_war = no
				}
				set_variable = { league_of_nations_generated_threat = 0 }
				clr_country_flag = last_league_of_nations_threat_static_change
				set_country_flag = last_league_of_nations_threat_static_change
				set_variable = { last_league_of_nations_threat_static_change = 5 }
			}
			# Reinstate the LoN after being invaded and hold elections
			if = {
				limit = {
					tag = LON
					has_war = no
				}
				country_event = { id = league_of_nations_events.1 }
				country_event = { id = league_of_nations_events.5 days = 5 }
			}
		}
	}

	# ROOT is winner, FROM gets annexed - This will also fire on_annex
	on_civil_war_end_before_annexation = {
		effect = {
			set_country_flag = civil_war_small_aggressiveness_penalty_for_annexing
		}
	}

	on_civil_war_end = {
		effect = {
			# join the LoN if enemy in civil war (former country) was a member
			if = {
				limit = {
					FROM = { has_country_flag = member_of_league_of_nations }
				}
				join_league_of_nations_effect = yes
			}
		}
	}

	# ROOT declared war, FROM is war target
	on_declare_war = {
		effect = {
			hidden_effect = {
				# Winter War voting:
				if = {
					limit = {
						is_historical_focus_on = yes
						FROM = {
							tag = FIN
							has_country_flag = member_of_league_of_nations
						}
						tag = SOV
						NOT = { has_global_flag = SOV_FIN_voting_happened }
						NOT = { has_global_flag = SOV_FIN_voting_triggered }
						NOT = { has_global_flag = SOV_FIN_voting_started }
						NOT = { has_country_flag = target_of_league_of_nations_voting }
					}
					FIN = {
						country_event = { id = league_of_nations_events.19 }
					}
				}
				# add threat for declaring war
				if = {
					limit = {
						has_civil_war = no
					}
					set_temp_variable = { league_of_nations_threat_from_declare_war_temp = 10 }
					add_to_variable = { league_of_nations_generated_threat = league_of_nations_threat_from_declare_war_temp }
					if = {
						limit = {
							check_variable = { league_of_nations_generated_threat > 100 }
						}
						set_variable = { league_of_nations_generated_threat = 100 }
					}
					if = {
						limit = {
							check_variable = { league_of_nations_generated_threat < 0 }
						}
						set_variable = { league_of_nations_generated_threat = 0 }
					}
					clr_country_flag = last_league_of_nations_threat_static_change
					set_country_flag = last_league_of_nations_threat_static_change
					set_variable = { last_league_of_nations_threat_static_change = 1 }
					sort_array_high_to_low_global_threat_countries_array = yes
				}
			}
			# call LoN coalition to war
			if = {
				limit = {
					has_idea = league_of_nations_defense_pact_target
					FROM = {
						has_country_flag = member_of_league_of_nations
					}
					any_country = {
						has_country_flag = member_of_league_of_nations
						NOT = { tag = FROM }
						NOT = { has_war_with = ROOT }
					}
				}
				FROM = {
					country_event = { id = league_of_nations_events.24 }
				}
			}
		}
	}

	# ROOT is nation being puppeted, FROM is overlord - used when puppeting in a peace conference
	on_puppet = {
		effect = {
			# add threat for puppeting
			FROM = {
				set_temp_variable = { league_of_nations_threat_from_puppeting_temp = 5 }
				add_to_variable = { league_of_nations_generated_threat = league_of_nations_threat_from_puppeting_temp }
				if = {
					limit = {
						check_variable = { league_of_nations_generated_threat > 100 }
					}
					set_variable = { league_of_nations_generated_threat = 100 }
				}
				if = {
					limit = {
						check_variable = { league_of_nations_generated_threat < 0 }
					}
					set_variable = { league_of_nations_generated_threat = 0 }
				}
				clr_country_flag = last_league_of_nations_threat_static_change
				set_country_flag = last_league_of_nations_threat_static_change
				set_variable = { last_league_of_nations_threat_static_change = 3 }
				sort_array_high_to_low_global_threat_countries_array = yes
			}
		}
	}

	# ROOT is free nation, FROM is releaser
	on_release_as_free = {
		effect = {
			# reduce threat for releasing
			FROM = {
				set_temp_variable = { league_of_nations_threat_from_releasing_temp = -5 }
				add_to_variable = { league_of_nations_generated_threat = league_of_nations_threat_from_releasing_temp }
				if = {
					limit = {
						check_variable = { league_of_nations_generated_threat > 100 }
					}
					set_variable = { league_of_nations_generated_threat = 100 }
				}
				if = {
					limit = {
						check_variable = { league_of_nations_generated_threat < 0 }
					}
					set_variable = { league_of_nations_generated_threat = 0 }
				}
				clr_country_flag = last_league_of_nations_threat_static_change
				set_country_flag = last_league_of_nations_threat_static_change
				set_variable = { last_league_of_nations_threat_static_change = 6 }
				sort_array_high_to_low_global_threat_countries_array = yes
			}
		}
	}

	# ROOT is winner, FROM is loser
	on_peaceconference_ended = {
		effect = {
			# add threat for only annexing states in peace conference
			set_variable = { league_of_nations_threat_from_state_annexations = 0 }
			if = {
				limit = {
					OR = {
						NOT = { has_country_flag = civil_war_small_aggressiveness_penalty_for_annexing }
						AND = {
							NOT = { original_tag = FROM }
							FROM = {
								NOT = { original_tag = ROOT }
							}
						}
					}
					any_owned_state = {
						NOT = { has_state_flag = annexed_by_@ROOT }
						is_core_of = FROM
					}
				}
				every_owned_state = {
					limit = {
						NOT = { has_state_flag = annexed_by_@ROOT }
						is_core_of = FROM
					}
					set_state_flag = annexed_by_@ROOT
					ROOT = {
						add_to_variable = { league_of_nations_generated_threat = 2 }
						add_to_variable = { league_of_nations_threat_from_state_annexations = 2 }
					}
					set_variable = { previous_owner = FROM.id }
				}
				if = {
					limit = {
						country_exists = FROM
					}
					clr_country_flag = last_league_of_nations_threat_static_change
					set_country_flag = last_league_of_nations_threat_static_change
					set_variable = { last_league_of_nations_threat_static_change = 8 }
					sort_array_high_to_low_global_threat_countries_array = yes
				}
			}
		}
	}

	# ROOT is sender, FROM is target
	on_generate_wargoal = {
		effect = {
			# add threat for generating war goal
			set_temp_variable = { league_of_nations_threat_from_wargoal_temp = 3 }
			add_to_variable = { league_of_nations_generated_threat = league_of_nations_threat_from_wargoal_temp }
			clr_country_flag = last_league_of_nations_threat_static_change
			set_country_flag = last_league_of_nations_threat_static_change
			set_variable = { last_league_of_nations_threat_static_change = 9 }
			sort_array_high_to_low_global_threat_countries_array = yes
		}
	}

	# ROOT is sender, FROM is target
	on_call_allies = {
		effect = {
			# add threat for declaring war (joining ally in offensive war)
			if = {
				limit = {
					has_offensive_war = yes
					any_country = {
						has_defensive_war_with = ROOT
						NOT = { has_war_with = FROM }
					}
				}
				every_country = {
					limit = {
						has_defensive_war_with = ROOT
						NOT = { has_war_with = FROM }
					}
					set_country_flag = could_be_called_against_this_@FROM
				}
				FROM = {
					country_event = { id = league_of_nations_events.22 hours = 1 }
				}
			}
		}
	}

	# ROOT is sender, FROM is target
	on_join_allies = {
		effect = {
			# add threat for declaring war (joining ally in offensive war)
			if = {
				limit = {
					FROM = { has_offensive_war = yes }
					any_country = {
						has_defensive_war_with = FROM
						NOT = { has_war_with = ROOT }
					}
				}
				every_country = {
					limit = {
						has_defensive_war_with = FROM
						NOT = { has_war_with = ROOT }
					}
					set_country_flag = could_be_called_against_this_@ROOT
				}
				country_event = { id = league_of_nations_events.22 hours = 1 }
			}
		}
	}

	# ROOT is new controller, FROM is old controller, FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			# add threat when annexing a state while at peace (e.g. Memel)
			if = {
				limit = {
					NOT = { has_war_with = FROM }
					FROM.FROM = {
						is_owned_by = ROOT
						NOT = { is_core_of = ROOT }
					}
					country_exists = FROM
					FROM = {
						NOT = { has_country_flag = has_war_with_@ROOT }
						NOT = { is_subject_of = ROOT }
					}
				}
				set_temp_variable = { previous_owner_of_peacefully_annexed_state = FROM.id }
				FROM.FROM = {
					set_state_flag = annexed_by_@ROOT
					set_variable = { previous_owner = previous_owner_of_peacefully_annexed_state }
				}
				set_temp_variable = { league_of_nations_threat_from_peaceful_state_annexation_temp = 3 }
				add_to_variable = { league_of_nations_generated_threat = league_of_nations_threat_from_peaceful_state_annexation_temp }
				if = {
					limit = {
						check_variable = { league_of_nations_generated_threat > 100 }
					}
					set_variable = { league_of_nations_generated_threat = 100 }
				}
				if = {
					limit = {
						check_variable = { league_of_nations_generated_threat < 0 }
					}
					set_variable = { league_of_nations_generated_threat = 0 }
				}
				clr_country_flag = last_league_of_nations_threat_static_change
				set_country_flag = last_league_of_nations_threat_static_change
				set_variable = { last_league_of_nations_threat_static_change = 12 }
				sort_array_high_to_low_global_threat_countries_array = yes
			}
		}
	}

	# ROOT is country that dropped the nuke, FROM is the state the nuke was dropped on
	on_nuke_drop = {
		effect = {
			if = {
				limit = {
					FROM = {
						owner = {
							has_offensive_war_with = ROOT
						}
					}
				}
				set_variable = { league_of_nations_threat_from_dropping_nuke = 7.5 }
			}
			else_if = {
				limit = {
					always = yes
				}
				set_variable = { league_of_nations_threat_from_dropping_nuke = 15 }
			}
			add_to_variable = { league_of_nations_generated_threat = league_of_nations_threat_from_dropping_nuke }
			if = {
				limit = {
					check_variable = { league_of_nations_generated_threat > 100 }
				}
				set_variable = { league_of_nations_generated_threat = 100 }
			}
			if = {
				limit = {
					check_variable = { league_of_nations_generated_threat < 0 }
				}
				set_variable = { league_of_nations_generated_threat = 0 }
			}
			clr_country_flag = last_league_of_nations_threat_static_change
			set_country_flag = last_league_of_nations_threat_static_change
			set_variable = { last_league_of_nations_threat_static_change = 13 }
			sort_array_high_to_low_global_threat_countries_array = yes
		}
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {
		effect = {
			if = {
				limit = {
					FROM = {
						tag = LON
					}
				}
				every_country = {
					limit = {
						has_country_flag = member_of_league_of_nations
						NOT = {
							tag = FROM
							has_country_flag = LON_being_attacked
						}
					}
					country_event = league_of_nations_news_events.26
				}
			}
		}
	}

	on_wargoal_expire = {
		effect = {
			if = {
				limit = {
					FROM = {
						tag = LON
					}
				}
				clr_global_flag = LON_being_attacked
			}
		}
	}

	on_capitulation = {
		effect = {
			if = {
				limit = {
					OR = {
						Second_World_War_Axis_Victory = yes
						Second_World_War_Allied_Victory = yes
					}
					NOT = { has_global_flag = ww2_over }
					date > 1940.1.1
					date < 1949.1.1
				}
				set_global_flag = ww2_over
				every_country = {
					limit = {
						has_country_flag = leader_of_league_of_nations
					}
					country_event = league_of_nations_events.27
				}
			}
		}
	}
}
